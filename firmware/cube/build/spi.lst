ARM GAS  /tmp/ccPdIgKe.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_SPI1_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_SPI1_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_SPI1_Init:
  24              	.LFB64:
  25              		.file 1 "Src/spi.c"
   1:Src/spi.c     **** /**
   2:Src/spi.c     ****   ******************************************************************************
   3:Src/spi.c     ****   * File Name          : SPI.c
   4:Src/spi.c     ****   * Description        : This file provides code for the configuration
   5:Src/spi.c     ****   *                      of the SPI instances.
   6:Src/spi.c     ****   ******************************************************************************
   7:Src/spi.c     ****   ** This notice applies to any and all portions of this file
   8:Src/spi.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/spi.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/spi.c     ****   * inserted by the user or by software development tools
  11:Src/spi.c     ****   * are owned by their respective copyright owners.
  12:Src/spi.c     ****   *
  13:Src/spi.c     ****   * COPYRIGHT(c) 2017 STMicroelectronics
  14:Src/spi.c     ****   *
  15:Src/spi.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/spi.c     ****   * are permitted provided that the following conditions are met:
  17:Src/spi.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/spi.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/spi.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/spi.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/spi.c     ****   *      and/or other materials provided with the distribution.
  22:Src/spi.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/spi.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/spi.c     ****   *      without specific prior written permission.
  25:Src/spi.c     ****   *
  26:Src/spi.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/spi.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/spi.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/spi.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/spi.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/spi.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/spi.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/spi.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccPdIgKe.s 			page 2


  34:Src/spi.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/spi.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/spi.c     ****   *
  37:Src/spi.c     ****   ******************************************************************************
  38:Src/spi.c     ****   */
  39:Src/spi.c     **** 
  40:Src/spi.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/spi.c     **** #include "spi.h"
  42:Src/spi.c     **** 
  43:Src/spi.c     **** #include "gpio.h"
  44:Src/spi.c     **** #include "dma.h"
  45:Src/spi.c     **** 
  46:Src/spi.c     **** /* USER CODE BEGIN 0 */
  47:Src/spi.c     **** 
  48:Src/spi.c     **** /* USER CODE END 0 */
  49:Src/spi.c     **** 
  50:Src/spi.c     **** SPI_HandleTypeDef hspi1;
  51:Src/spi.c     **** DMA_HandleTypeDef hdma_spi1_tx;
  52:Src/spi.c     **** 
  53:Src/spi.c     **** /* SPI1 init function */
  54:Src/spi.c     **** void MX_SPI1_Init(void)
  55:Src/spi.c     **** {
  26              		.loc 1 55 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  56:Src/spi.c     **** 
  57:Src/spi.c     ****   hspi1.Instance = SPI1;
  35              		.loc 1 57 0
  36 0002 0E48     		ldr	r0, .L5
  37 0004 0E4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  58:Src/spi.c     ****   hspi1.Init.Mode = SPI_MODE_MASTER;
  39              		.loc 1 58 0
  40 0008 4FF48273 		mov	r3, #260
  41 000c 4360     		str	r3, [r0, #4]
  59:Src/spi.c     ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  42              		.loc 1 59 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  60:Src/spi.c     ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  45              		.loc 1 60 0
  46 0012 C360     		str	r3, [r0, #12]
  61:Src/spi.c     ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  47              		.loc 1 61 0
  48 0014 0361     		str	r3, [r0, #16]
  62:Src/spi.c     ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  49              		.loc 1 62 0
  50 0016 4361     		str	r3, [r0, #20]
  63:Src/spi.c     ****   hspi1.Init.NSS = SPI_NSS_SOFT;
  51              		.loc 1 63 0
  52 0018 4FF40072 		mov	r2, #512
ARM GAS  /tmp/ccPdIgKe.s 			page 3


  53 001c 8261     		str	r2, [r0, #24]
  64:Src/spi.c     ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  54              		.loc 1 64 0
  55 001e C361     		str	r3, [r0, #28]
  65:Src/spi.c     ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  56              		.loc 1 65 0
  57 0020 0362     		str	r3, [r0, #32]
  66:Src/spi.c     ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  58              		.loc 1 66 0
  59 0022 4362     		str	r3, [r0, #36]
  67:Src/spi.c     ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  60              		.loc 1 67 0
  61 0024 8362     		str	r3, [r0, #40]
  68:Src/spi.c     ****   hspi1.Init.CRCPolynomial = 10;
  62              		.loc 1 68 0
  63 0026 0A23     		movs	r3, #10
  64 0028 C362     		str	r3, [r0, #44]
  69:Src/spi.c     ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
  65              		.loc 1 69 0
  66 002a FFF7FEFF 		bl	HAL_SPI_Init
  67              	.LVL0:
  68 002e 00B9     		cbnz	r0, .L4
  69              	.L1:
  70:Src/spi.c     ****   {
  71:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
  72:Src/spi.c     ****   }
  73:Src/spi.c     **** 
  74:Src/spi.c     **** }
  70              		.loc 1 74 0
  71 0030 08BD     		pop	{r3, pc}
  72              	.L4:
  71:Src/spi.c     ****   }
  73              		.loc 1 71 0
  74 0032 4721     		movs	r1, #71
  75 0034 0348     		ldr	r0, .L5+8
  76 0036 FFF7FEFF 		bl	_Error_Handler
  77              	.LVL1:
  78              		.loc 1 74 0
  79 003a F9E7     		b	.L1
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 003c 00000000 		.word	hspi1
  84 0040 00300140 		.word	1073819648
  85 0044 00000000 		.word	.LC1
  86              		.cfi_endproc
  87              	.LFE64:
  89              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
  90              		.align	1
  91              		.global	HAL_SPI_MspInit
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	HAL_SPI_MspInit:
  98              	.LFB65:
  75:Src/spi.c     **** 
ARM GAS  /tmp/ccPdIgKe.s 			page 4


  76:Src/spi.c     **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
  77:Src/spi.c     **** {
  99              		.loc 1 77 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 24
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              	.LVL2:
  78:Src/spi.c     **** 
  79:Src/spi.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  80:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 104              		.loc 1 80 0
 105 0000 0268     		ldr	r2, [r0]
 106 0002 1F4B     		ldr	r3, .L16
 107 0004 9A42     		cmp	r2, r3
 108 0006 00D0     		beq	.L14
 109 0008 7047     		bx	lr
 110              	.L14:
  77:Src/spi.c     **** 
 111              		.loc 1 77 0
 112 000a 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 000c 86B0     		sub	sp, sp, #24
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 32
 120 000e 0446     		mov	r4, r0
 121              	.LBB2:
  81:Src/spi.c     ****   {
  82:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 0 */
  83:Src/spi.c     **** 
  84:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 0 */
  85:Src/spi.c     ****     /* Peripheral clock enable */
  86:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_ENABLE();
 122              		.loc 1 86 0
 123 0010 03F56043 		add	r3, r3, #57344
 124 0014 9A69     		ldr	r2, [r3, #24]
 125 0016 42F48052 		orr	r2, r2, #4096
 126 001a 9A61     		str	r2, [r3, #24]
 127 001c 9B69     		ldr	r3, [r3, #24]
 128 001e 03F48053 		and	r3, r3, #4096
 129 0022 0193     		str	r3, [sp, #4]
 130 0024 019B     		ldr	r3, [sp, #4]
 131              	.LBE2:
  87:Src/spi.c     ****   
  88:Src/spi.c     ****     /**SPI1 GPIO Configuration    
  89:Src/spi.c     ****     PA5     ------> SPI1_SCK
  90:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
  91:Src/spi.c     ****     */
  92:Src/spi.c     ****     GPIO_InitStruct.Pin = SER_DATA_Pin|SER_CLK_Pin;
 132              		.loc 1 92 0
 133 0026 A023     		movs	r3, #160
 134 0028 0293     		str	r3, [sp, #8]
  93:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 135              		.loc 1 93 0
 136 002a 0223     		movs	r3, #2
ARM GAS  /tmp/ccPdIgKe.s 			page 5


 137 002c 0393     		str	r3, [sp, #12]
  94:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 138              		.loc 1 94 0
 139 002e 0323     		movs	r3, #3
 140 0030 0593     		str	r3, [sp, #20]
  95:Src/spi.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 141              		.loc 1 95 0
 142 0032 02A9     		add	r1, sp, #8
 143 0034 1348     		ldr	r0, .L16+4
 144              	.LVL3:
 145 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
  96:Src/spi.c     **** 
  97:Src/spi.c     ****     /* SPI1 DMA Init */
  98:Src/spi.c     ****     /* SPI1_TX Init */
  99:Src/spi.c     ****     hdma_spi1_tx.Instance = DMA1_Channel3;
 147              		.loc 1 99 0
 148 003a 1348     		ldr	r0, .L16+8
 149 003c 134B     		ldr	r3, .L16+12
 150 003e 0360     		str	r3, [r0]
 100:Src/spi.c     ****     hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 151              		.loc 1 100 0
 152 0040 1023     		movs	r3, #16
 153 0042 4360     		str	r3, [r0, #4]
 101:Src/spi.c     ****     hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 154              		.loc 1 101 0
 155 0044 0023     		movs	r3, #0
 156 0046 8360     		str	r3, [r0, #8]
 102:Src/spi.c     ****     hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 157              		.loc 1 102 0
 158 0048 8022     		movs	r2, #128
 159 004a C260     		str	r2, [r0, #12]
 103:Src/spi.c     ****     hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 160              		.loc 1 103 0
 161 004c 0361     		str	r3, [r0, #16]
 104:Src/spi.c     ****     hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 162              		.loc 1 104 0
 163 004e 4361     		str	r3, [r0, #20]
 105:Src/spi.c     ****     hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 164              		.loc 1 105 0
 165 0050 8361     		str	r3, [r0, #24]
 106:Src/spi.c     ****     hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 166              		.loc 1 106 0
 167 0052 C361     		str	r3, [r0, #28]
 107:Src/spi.c     ****     if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 168              		.loc 1 107 0
 169 0054 FFF7FEFF 		bl	HAL_DMA_Init
 170              	.LVL5:
 171 0058 60B9     		cbnz	r0, .L15
 172              	.L9:
 108:Src/spi.c     ****     {
 109:Src/spi.c     ****       _Error_Handler(__FILE__, __LINE__);
 110:Src/spi.c     ****     }
 111:Src/spi.c     **** 
 112:Src/spi.c     ****     __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi1_tx);
 173              		.loc 1 112 0
 174 005a 0B4B     		ldr	r3, .L16+8
ARM GAS  /tmp/ccPdIgKe.s 			page 6


 175 005c 2364     		str	r3, [r4, #64]
 176 005e 5C62     		str	r4, [r3, #36]
 113:Src/spi.c     **** 
 114:Src/spi.c     ****     /* SPI1 interrupt Init */
 115:Src/spi.c     ****     HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 177              		.loc 1 115 0
 178 0060 0022     		movs	r2, #0
 179 0062 1146     		mov	r1, r2
 180 0064 2320     		movs	r0, #35
 181 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 182              	.LVL6:
 116:Src/spi.c     ****     HAL_NVIC_EnableIRQ(SPI1_IRQn);
 183              		.loc 1 116 0
 184 006a 2320     		movs	r0, #35
 185 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 186              	.LVL7:
 117:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 118:Src/spi.c     **** 
 119:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 1 */
 120:Src/spi.c     ****   }
 121:Src/spi.c     **** }
 187              		.loc 1 121 0
 188 0070 06B0     		add	sp, sp, #24
 189              	.LCFI3:
 190              		.cfi_remember_state
 191              		.cfi_def_cfa_offset 8
 192              		@ sp needed
 193 0072 10BD     		pop	{r4, pc}
 194              	.LVL8:
 195              	.L15:
 196              	.LCFI4:
 197              		.cfi_restore_state
 109:Src/spi.c     ****     }
 198              		.loc 1 109 0
 199 0074 6D21     		movs	r1, #109
 200 0076 0648     		ldr	r0, .L16+16
 201 0078 FFF7FEFF 		bl	_Error_Handler
 202              	.LVL9:
 203 007c EDE7     		b	.L9
 204              	.L17:
 205 007e 00BF     		.align	2
 206              	.L16:
 207 0080 00300140 		.word	1073819648
 208 0084 00080140 		.word	1073809408
 209 0088 00000000 		.word	hdma_spi1_tx
 210 008c 30000240 		.word	1073872944
 211 0090 00000000 		.word	.LC1
 212              		.cfi_endproc
 213              	.LFE65:
 215              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 216              		.align	1
 217              		.global	HAL_SPI_MspDeInit
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	HAL_SPI_MspDeInit:
ARM GAS  /tmp/ccPdIgKe.s 			page 7


 224              	.LFB66:
 122:Src/spi.c     **** 
 123:Src/spi.c     **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 124:Src/spi.c     **** {
 225              		.loc 1 124 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              	.LVL10:
 125:Src/spi.c     **** 
 126:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 230              		.loc 1 126 0
 231 0000 0268     		ldr	r2, [r0]
 232 0002 0B4B     		ldr	r3, .L25
 233 0004 9A42     		cmp	r2, r3
 234 0006 00D0     		beq	.L24
 235 0008 7047     		bx	lr
 236              	.L24:
 124:Src/spi.c     **** 
 237              		.loc 1 124 0
 238 000a 10B5     		push	{r4, lr}
 239              	.LCFI5:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
 243 000c 0446     		mov	r4, r0
 127:Src/spi.c     ****   {
 128:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 129:Src/spi.c     **** 
 130:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 0 */
 131:Src/spi.c     ****     /* Peripheral clock disable */
 132:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_DISABLE();
 244              		.loc 1 132 0
 245 000e 094A     		ldr	r2, .L25+4
 246 0010 9369     		ldr	r3, [r2, #24]
 247 0012 23F48053 		bic	r3, r3, #4096
 248 0016 9361     		str	r3, [r2, #24]
 133:Src/spi.c     ****   
 134:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 135:Src/spi.c     ****     PA5     ------> SPI1_SCK
 136:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 137:Src/spi.c     ****     */
 138:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOA, SER_DATA_Pin|SER_CLK_Pin);
 249              		.loc 1 138 0
 250 0018 A021     		movs	r1, #160
 251 001a 0748     		ldr	r0, .L25+8
 252              	.LVL11:
 253 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 254              	.LVL12:
 139:Src/spi.c     **** 
 140:Src/spi.c     ****     /* SPI1 DMA DeInit */
 141:Src/spi.c     ****     HAL_DMA_DeInit(spiHandle->hdmatx);
 255              		.loc 1 141 0
 256 0020 206C     		ldr	r0, [r4, #64]
 257 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 258              	.LVL13:
 142:Src/spi.c     **** 
ARM GAS  /tmp/ccPdIgKe.s 			page 8


 143:Src/spi.c     ****     /* SPI1 interrupt Deinit */
 144:Src/spi.c     ****     HAL_NVIC_DisableIRQ(SPI1_IRQn);
 259              		.loc 1 144 0
 260 0026 2320     		movs	r0, #35
 261 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 262              	.LVL14:
 145:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 1 */
 146:Src/spi.c     **** 
 147:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 1 */
 148:Src/spi.c     ****   }
 149:Src/spi.c     **** } 
 263              		.loc 1 149 0
 264 002c 10BD     		pop	{r4, pc}
 265              	.LVL15:
 266              	.L26:
 267 002e 00BF     		.align	2
 268              	.L25:
 269 0030 00300140 		.word	1073819648
 270 0034 00100240 		.word	1073876992
 271 0038 00080140 		.word	1073809408
 272              		.cfi_endproc
 273              	.LFE66:
 275              		.section	.text.send_data,"ax",%progbits
 276              		.align	1
 277              		.global	send_data
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu softvfp
 283              	send_data:
 284              	.LFB67:
 150:Src/spi.c     **** 
 151:Src/spi.c     **** void send_data(uint8_t* data)
 152:Src/spi.c     **** {
 285              		.loc 1 152 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 8
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              	.LVL16:
 290 0000 00B5     		push	{lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 14, -4
 294 0002 83B0     		sub	sp, sp, #12
 295              	.LCFI7:
 296              		.cfi_def_cfa_offset 16
 153:Src/spi.c     ****     gpio_latch(0);
 297              		.loc 1 153 0
 298 0004 0020     		movs	r0, #0
 299              	.LVL17:
 300 0006 FFF7FEFF 		bl	gpio_latch
 301              	.LVL18:
 154:Src/spi.c     ****     uint8_t myData[] = {0xaa, 0xaa};
 302              		.loc 1 154 0
 303 000a 064B     		ldr	r3, .L29
 304 000c 1B88     		ldrh	r3, [r3]
 305 000e 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccPdIgKe.s 			page 9


 306 0010 21F8043D 		strh	r3, [r1, #-4]!	@ movhi
 155:Src/spi.c     ****     HAL_SPI_Transmit_DMA(&hspi1, myData, 2);
 307              		.loc 1 155 0
 308 0014 0222     		movs	r2, #2
 309 0016 0448     		ldr	r0, .L29+4
 310 0018 FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 311              	.LVL19:
 156:Src/spi.c     **** }
 312              		.loc 1 156 0
 313 001c 03B0     		add	sp, sp, #12
 314              	.LCFI8:
 315              		.cfi_def_cfa_offset 4
 316              		@ sp needed
 317 001e 5DF804FB 		ldr	pc, [sp], #4
 318              	.L30:
 319 0022 00BF     		.align	2
 320              	.L29:
 321 0024 00000000 		.word	.LANCHOR0
 322 0028 00000000 		.word	hspi1
 323              		.cfi_endproc
 324              	.LFE67:
 326              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 327              		.align	1
 328              		.global	HAL_SPI_TxCpltCallback
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu softvfp
 334              	HAL_SPI_TxCpltCallback:
 335              	.LFB68:
 157:Src/spi.c     **** 
 158:Src/spi.c     **** void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef* hspi){
 336              		.loc 1 158 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL20:
 341 0000 08B5     		push	{r3, lr}
 342              	.LCFI9:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 3, -8
 345              		.cfi_offset 14, -4
 159:Src/spi.c     ****     gpio_latch(1);
 346              		.loc 1 159 0
 347 0002 0120     		movs	r0, #1
 348              	.LVL21:
 349 0004 FFF7FEFF 		bl	gpio_latch
 350              	.LVL22:
 160:Src/spi.c     **** }
 351              		.loc 1 160 0
 352 0008 08BD     		pop	{r3, pc}
 353              		.cfi_endproc
 354              	.LFE68:
 356              		.comm	hdma_spi1_tx,56,4
 357              		.comm	hspi1,88,4
 358              		.section	.rodata
 359              		.align	2
ARM GAS  /tmp/ccPdIgKe.s 			page 10


 360              		.set	.LANCHOR0,. + 0
 361              	.LC0:
 362 0000 AA       		.byte	-86
 363 0001 AA       		.byte	-86
 364              		.section	.rodata.MX_SPI1_Init.str1.4,"aMS",%progbits,1
 365              		.align	2
 366              	.LC1:
 367 0000 5372632F 		.ascii	"Src/spi.c\000"
 367      7370692E 
 367      6300
 368              		.text
 369              	.Letext0:
 370              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 371              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 372              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 373              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 374              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 375              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 376              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 377              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.1.0/include/stddef.h"
 378              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 379              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 380              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 381              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 382              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 383              		.file 15 "Inc/spi.h"
 384              		.file 16 "Inc/gpio.h"
 385              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 386              		.file 18 "Inc/dma.h"
ARM GAS  /tmp/ccPdIgKe.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
     /tmp/ccPdIgKe.s:16     .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccPdIgKe.s:23     .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccPdIgKe.s:83     .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccPdIgKe.s:90     .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccPdIgKe.s:97     .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccPdIgKe.s:207    .text.HAL_SPI_MspInit:0000000000000080 $d
                            *COM*:0000000000000038 hdma_spi1_tx
     /tmp/ccPdIgKe.s:216    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccPdIgKe.s:223    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccPdIgKe.s:269    .text.HAL_SPI_MspDeInit:0000000000000030 $d
     /tmp/ccPdIgKe.s:276    .text.send_data:0000000000000000 $t
     /tmp/ccPdIgKe.s:283    .text.send_data:0000000000000000 send_data
     /tmp/ccPdIgKe.s:321    .text.send_data:0000000000000024 $d
     /tmp/ccPdIgKe.s:327    .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccPdIgKe.s:334    .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccPdIgKe.s:359    .rodata:0000000000000000 $d
     /tmp/ccPdIgKe.s:365    .rodata.MX_SPI1_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SPI_Init
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
gpio_latch
HAL_SPI_Transmit_DMA
