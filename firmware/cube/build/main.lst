ARM GAS  /tmp/ccN20eIG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	_Error_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_Error_Handler:
  24              	.LFB66:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/ccN20eIG.s 			page 2


  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f1xx_hal.h"
  41:Src/main.c    **** #include "dma.h"
  42:Src/main.c    **** #include "spi.h"
  43:Src/main.c    **** #include "tim.h"
  44:Src/main.c    **** #include "gpio.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  89:Src/main.c    ****   /* USER CODE END SysInit */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccN20eIG.s 			page 3


  91:Src/main.c    ****   /* Initialize all configured peripherals */
  92:Src/main.c    ****   MX_GPIO_Init();
  93:Src/main.c    ****   MX_DMA_Init();
  94:Src/main.c    ****   MX_SPI1_Init();
  95:Src/main.c    ****   MX_TIM4_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Infinite loop */
 101:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 102:Src/main.c    ****   while (1)
 103:Src/main.c    ****   {
 104:Src/main.c    ****   /* USER CODE END WHILE */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN 3 */
 107:Src/main.c    ****       uint8_t data1[] = {0xa5, 0xa5};
 108:Src/main.c    ****       send_data(&data1[0]);
 109:Src/main.c    ****       HAL_Delay(100);
 110:Src/main.c    ****       uint8_t data2[] = {0x5a, 0x5a};
 111:Src/main.c    ****       send_data(&data2[0]);
 112:Src/main.c    ****       HAL_Delay(100);
 113:Src/main.c    **** 
 114:Src/main.c    ****   }
 115:Src/main.c    ****   /* USER CODE END 3 */
 116:Src/main.c    **** 
 117:Src/main.c    **** }
 118:Src/main.c    **** 
 119:Src/main.c    **** /** System Clock Configuration
 120:Src/main.c    **** */
 121:Src/main.c    **** void SystemClock_Config(void)
 122:Src/main.c    **** {
 123:Src/main.c    **** 
 124:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 125:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 126:Src/main.c    **** 
 127:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 128:Src/main.c    ****     */
 129:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 130:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 131:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
 135:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136:Src/main.c    ****   {
 137:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 138:Src/main.c    ****   }
 139:Src/main.c    **** 
 140:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 141:Src/main.c    ****     */
 142:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 147:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccN20eIG.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 152:Src/main.c    ****   }
 153:Src/main.c    **** 
 154:Src/main.c    ****     /**Configure the Systick interrupt time 
 155:Src/main.c    ****     */
 156:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 157:Src/main.c    **** 
 158:Src/main.c    ****     /**Configure the Systick 
 159:Src/main.c    ****     */
 160:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 163:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 164:Src/main.c    **** }
 165:Src/main.c    **** 
 166:Src/main.c    **** /* USER CODE BEGIN 4 */
 167:Src/main.c    **** 
 168:Src/main.c    **** /* USER CODE END 4 */
 169:Src/main.c    **** 
 170:Src/main.c    **** /**
 171:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 172:Src/main.c    ****   * @param  None
 173:Src/main.c    ****   * @retval None
 174:Src/main.c    ****   */
 175:Src/main.c    **** void _Error_Handler(char * file, int line)
 176:Src/main.c    **** {
  26              		.loc 1 176 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  34 0000 FEE7     		b	.L2
  35              		.cfi_endproc
  36              	.LFE66:
  38              		.section	.text.SystemClock_Config,"ax",%progbits
  39              		.align	1
  40              		.global	SystemClock_Config
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu softvfp
  46              	SystemClock_Config:
  47              	.LFB65:
 122:Src/main.c    **** 
  48              		.loc 1 122 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 64
  51              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Src/main.c    **** 
  52              		.loc 1 122 0
  53 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccN20eIG.s 			page 5


  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 4
  56              		.cfi_offset 14, -4
  57 0002 91B0     		sub	sp, sp, #68
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 72
 129:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  60              		.loc 1 129 0
  61 0004 0223     		movs	r3, #2
  62 0006 0693     		str	r3, [sp, #24]
 130:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  63              		.loc 1 130 0
  64 0008 0122     		movs	r2, #1
  65 000a 0A92     		str	r2, [sp, #40]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  66              		.loc 1 131 0
  67 000c 1022     		movs	r2, #16
  68 000e 0B92     		str	r2, [sp, #44]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
  69              		.loc 1 132 0
  70 0010 0D93     		str	r3, [sp, #52]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
  71              		.loc 1 133 0
  72 0012 0023     		movs	r3, #0
  73 0014 0E93     		str	r3, [sp, #56]
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  74              		.loc 1 134 0
  75 0016 4FF40023 		mov	r3, #524288
  76 001a 0F93     		str	r3, [sp, #60]
 135:Src/main.c    ****   {
  77              		.loc 1 135 0
  78 001c 06A8     		add	r0, sp, #24
  79 001e FFF7FEFF 		bl	HAL_RCC_OscConfig
  80              	.LVL1:
  81 0022 F8B9     		cbnz	r0, .L7
 142:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  82              		.loc 1 142 0
  83 0024 0F23     		movs	r3, #15
  84 0026 0193     		str	r3, [sp, #4]
 144:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  85              		.loc 1 144 0
  86 0028 0223     		movs	r3, #2
  87 002a 0293     		str	r3, [sp, #8]
 145:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  88              		.loc 1 145 0
  89 002c 0021     		movs	r1, #0
  90 002e 0391     		str	r1, [sp, #12]
 146:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  91              		.loc 1 146 0
  92 0030 0491     		str	r1, [sp, #16]
 147:Src/main.c    **** 
  93              		.loc 1 147 0
  94 0032 0591     		str	r1, [sp, #20]
 149:Src/main.c    ****   {
  95              		.loc 1 149 0
  96 0034 01A8     		add	r0, sp, #4
  97 0036 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccN20eIG.s 			page 6


  98              	.LVL2:
  99 003a B8B9     		cbnz	r0, .L8
 156:Src/main.c    **** 
 100              		.loc 1 156 0
 101 003c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 102              	.LVL3:
 103 0040 0C4B     		ldr	r3, .L9
 104 0042 A3FB0030 		umull	r3, r0, r3, r0
 105 0046 8009     		lsrs	r0, r0, #6
 106 0048 FFF7FEFF 		bl	HAL_SYSTICK_Config
 107              	.LVL4:
 160:Src/main.c    **** 
 108              		.loc 1 160 0
 109 004c 0420     		movs	r0, #4
 110 004e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 111              	.LVL5:
 163:Src/main.c    **** }
 112              		.loc 1 163 0
 113 0052 0022     		movs	r2, #0
 114 0054 1146     		mov	r1, r2
 115 0056 4FF0FF30 		mov	r0, #-1
 116 005a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 117              	.LVL6:
 164:Src/main.c    **** 
 118              		.loc 1 164 0
 119 005e 11B0     		add	sp, sp, #68
 120              	.LCFI2:
 121              		.cfi_remember_state
 122              		.cfi_def_cfa_offset 4
 123              		@ sp needed
 124 0060 5DF804FB 		ldr	pc, [sp], #4
 125              	.L7:
 126              	.LCFI3:
 127              		.cfi_restore_state
 137:Src/main.c    ****   }
 128              		.loc 1 137 0
 129 0064 8921     		movs	r1, #137
 130 0066 0448     		ldr	r0, .L9+4
 131 0068 FFF7FEFF 		bl	_Error_Handler
 132              	.LVL7:
 133              	.L8:
 151:Src/main.c    ****   }
 134              		.loc 1 151 0
 135 006c 9721     		movs	r1, #151
 136 006e 0248     		ldr	r0, .L9+4
 137 0070 FFF7FEFF 		bl	_Error_Handler
 138              	.LVL8:
 139              	.L10:
 140              		.align	2
 141              	.L9:
 142 0074 D34D6210 		.word	274877907
 143 0078 00000000 		.word	.LC2
 144              		.cfi_endproc
 145              	.LFE65:
 147              		.section	.text.main,"ax",%progbits
 148              		.align	1
 149              		.global	main
ARM GAS  /tmp/ccN20eIG.s 			page 7


 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 155              	main:
 156              	.LFB64:
  70:Src/main.c    **** 
 157              		.loc 1 70 0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 00B5     		push	{lr}
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 16
  79:Src/main.c    **** 
 169              		.loc 1 79 0
 170 0004 FFF7FEFF 		bl	HAL_Init
 171              	.LVL9:
  86:Src/main.c    **** 
 172              		.loc 1 86 0
 173 0008 FFF7FEFF 		bl	SystemClock_Config
 174              	.LVL10:
  92:Src/main.c    ****   MX_DMA_Init();
 175              		.loc 1 92 0
 176 000c FFF7FEFF 		bl	MX_GPIO_Init
 177              	.LVL11:
  93:Src/main.c    ****   MX_SPI1_Init();
 178              		.loc 1 93 0
 179 0010 FFF7FEFF 		bl	MX_DMA_Init
 180              	.LVL12:
  94:Src/main.c    ****   MX_TIM4_Init();
 181              		.loc 1 94 0
 182 0014 FFF7FEFF 		bl	MX_SPI1_Init
 183              	.LVL13:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 184              		.loc 1 95 0
 185 0018 FFF7FEFF 		bl	MX_TIM4_Init
 186              	.LVL14:
 187              	.L12:
 188              	.LBB2:
 107:Src/main.c    ****       send_data(&data1[0]);
 189              		.loc 1 107 0 discriminator 1
 190 001c 094C     		ldr	r4, .L14
 191 001e 2388     		ldrh	r3, [r4]
 192 0020 02A8     		add	r0, sp, #8
 193 0022 20F8083D 		strh	r3, [r0, #-8]!	@ movhi
 108:Src/main.c    ****       HAL_Delay(100);
 194              		.loc 1 108 0 discriminator 1
 195 0026 FFF7FEFF 		bl	send_data
 196              	.LVL15:
 109:Src/main.c    ****       uint8_t data2[] = {0x5a, 0x5a};
 197              		.loc 1 109 0 discriminator 1
ARM GAS  /tmp/ccN20eIG.s 			page 8


 198 002a 6420     		movs	r0, #100
 199 002c FFF7FEFF 		bl	HAL_Delay
 200              	.LVL16:
 110:Src/main.c    ****       send_data(&data2[0]);
 201              		.loc 1 110 0 discriminator 1
 202 0030 A388     		ldrh	r3, [r4, #4]
 203 0032 02A8     		add	r0, sp, #8
 204 0034 20F8043D 		strh	r3, [r0, #-4]!	@ movhi
 111:Src/main.c    ****       HAL_Delay(100);
 205              		.loc 1 111 0 discriminator 1
 206 0038 FFF7FEFF 		bl	send_data
 207              	.LVL17:
 112:Src/main.c    **** 
 208              		.loc 1 112 0 discriminator 1
 209 003c 6420     		movs	r0, #100
 210 003e FFF7FEFF 		bl	HAL_Delay
 211              	.LVL18:
 212 0042 EBE7     		b	.L12
 213              	.L15:
 214              		.align	2
 215              	.L14:
 216 0044 00000000 		.word	.LANCHOR0
 217              	.LBE2:
 218              		.cfi_endproc
 219              	.LFE64:
 221              		.section	.rodata
 222              		.align	2
 223              		.set	.LANCHOR0,. + 0
 224              	.LC0:
 225 0000 A5       		.byte	-91
 226 0001 A5       		.byte	-91
 227 0002 0000     		.space	2
 228              	.LC1:
 229 0004 5A       		.byte	90
 230 0005 5A       		.byte	90
 231              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 232              		.align	2
 233              	.LC2:
 234 0000 5372632F 		.ascii	"Src/main.c\000"
 234      6D61696E 
 234      2E6300
 235              		.text
 236              	.Letext0:
 237              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 238              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 239              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 240              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 241              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 242              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 243              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 244              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.1.0/include/stddef.h"
 245              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 246              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 247              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 248              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 249              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 250              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
ARM GAS  /tmp/ccN20eIG.s 			page 9


 251              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 252              		.file 17 "Inc/spi.h"
 253              		.file 18 "Inc/tim.h"
 254              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 255              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 256              		.file 21 "Inc/gpio.h"
 257              		.file 22 "Inc/dma.h"
ARM GAS  /tmp/ccN20eIG.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccN20eIG.s:16     .text._Error_Handler:0000000000000000 $t
     /tmp/ccN20eIG.s:23     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccN20eIG.s:39     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccN20eIG.s:46     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccN20eIG.s:142    .text.SystemClock_Config:0000000000000074 $d
     /tmp/ccN20eIG.s:148    .text.main:0000000000000000 $t
     /tmp/ccN20eIG.s:155    .text.main:0000000000000000 main
     /tmp/ccN20eIG.s:216    .text.main:0000000000000044 $d
     /tmp/ccN20eIG.s:222    .rodata:0000000000000000 $d
     /tmp/ccN20eIG.s:232    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SPI1_Init
MX_TIM4_Init
send_data
HAL_Delay
